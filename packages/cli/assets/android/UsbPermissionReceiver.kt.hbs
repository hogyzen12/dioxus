package dev.dioxus.main

import android.content.BroadcastReceiver
import android.content.Context
import android.content.Intent
import android.hardware.usb.UsbDevice
import android.hardware.usb.UsbManager
import android.util.Log

class UsbPermissionReceiver : BroadcastReceiver() {
    
    companion object {
        private const val TAG = "UsbPermissionReceiver"
    }
    
    override fun onReceive(context: Context, intent: Intent) {
        Log.d(TAG, "onReceive called with action: ${intent.action}")
        
        if (intent.action == "{{application_id}}.USB_PERMISSION") {
            synchronized(this) {
                val device: UsbDevice? = intent.getParcelableExtra(UsbManager.EXTRA_DEVICE)
                val deviceName = intent.getStringExtra("device_name") ?: "unknown"
                
                if (intent.getBooleanExtra(UsbManager.EXTRA_PERMISSION_GRANTED, false)) {
                    device?.let {
                        Log.d(TAG, "USB permission granted for device: $deviceName")
                        // Send permission granted message to Rust
                        Ipc.sendUsbPermissionResult("permission_granted:$deviceName")
                    }
                } else {
                    Log.d(TAG, "USB permission denied for device: $deviceName")
                    // Send permission denied message to Rust
                    Ipc.sendUsbPermissionResult("permission_denied:$deviceName")
                }
            }
        }
    }
}